name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.x"
      - run: python -m pip install --upgrade pip build wheel twine
      - run: python -m build --sdist --wheel
      - run: python -m twine check dist/*
      - uses: actions/upload-artifact@v5
        with:
          path: dist/*

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lint-command:
          - black --check --diff .
          - ruff check --output-format=github .
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.x"
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'
      - run: python -m pip install -e .[lint]
      - run: ${{ matrix.lint-command }}

  pytest:
    needs:
      - lint
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: django-citext
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost/django-citext
    continue-on-error: ${{ matrix.is-latest-django }}
    strategy:
      matrix:
        is-latest-django:
          - false
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        django-version:
          # we don't need to support version that haven't deprecated CIText
          - "4.2"  # LTS
          - "5.0"
        extras:
          - ""
          - "bakery"
        include:
          - python-version: "3.13"
            django-version: "latest"
            extras: "bakery"
            is-latest-django: true
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    - run: python -m pip install .[test]
    - run: python -m pip install .[${{ matrix.extras }}]
      if: matrix.extras != ''
    - run: python -m pip install django~=${{ matrix.django-version }}.0
      if: matrix.django-version != 'latest'
    - run: python -m pip install git+https://github.com/django/django.git@main#egg=django
      if: matrix.django-version == 'latest'
    - run: python -m pytest
    - uses: codecov/codecov-action@v5
